//============================================================================
//  Copyright (c) Kitware, Inc.
//  All rights reserved.
//  See LICENSE.txt for details.
//
//  This software is distributed WITHOUT ANY WARRANTY; without even
//  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
//  PURPOSE.  See the above copyright notice for more information.
//============================================================================
//$# This file uses the pyexpander macro processing utility to build the
//$# FunctionInterface facilities that use a variable number of arguments.
//$# Information, documentation, and downloads for pyexpander can be found at:
//$#
//$#     http://pyexpander.sourceforge.net/
//$#
//$# To build the source code, execute the following (after installing
//$# pyexpander, of course):
//$#
//$#     expander.py ClipWithImplicitFunctionExternInstantiations.h.in > ClipWithImplicitFunctionExternInstantiations.h
//$#
//$# Ignore the following comment. It is meant for the generated file.
// **** DO NOT EDIT THIS FILE!!! ****
// This file is automatically generated by ClipWithImplicitFunctionExternInstantiations.h.in
// clang-format off

#ifndef vtk_m_filter_ClipWithImplicitFunctionExternInstantiations_h
#define vtk_m_filter_ClipWithImplicitFunctionExternInstantiations_h

#include <vtkm/filter/ClipWithImplicitFunction.h>
#include <vtkm/filter/ClipWithImplicitFunction.hxx>
#include <vtkm/filter/Instantiations.h>

#include <vtkm/cont/ArrayHandlePermutation.h>
#include <vtkm/cont/CellSetPermutation.h>
#include <vtkm/cont/DynamicCellSet.h>

namespace vtkm
{
namespace filter
{

#ifndef vtkm_filter_ClipWithImplicitFunction_cxx

$py(
# These values are taken from vtkm/TypeList.h
types = [ "vtkm::UInt8", "vtkm::Int32", "vtkm::Int64", "vtkm::Float32",
          "vtkm::Float64", "vtkm::Vec3f_32", "vtkm::Vec3f_64" ]
)\
\
\
$for(TYPE in types)\
VTKM_INSTANTIATION_BEGIN
extern template VTKM_FILTER_EXTRA_EXPORT bool ClipWithImplicitFunction::DoMapField(
  vtkm::cont::DataSet&,
  const vtkm::cont::ArrayHandle<$(TYPE)>&,
  const vtkm::filter::FieldMetadata&,
  vtkm::filter::PolicyBase<vtkm::filter::PolicyDefault>);
VTKM_INSTANTIATION_END

$endfor\

#endif

}
}

#endif
